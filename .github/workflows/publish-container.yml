name: Build and Publish Frontend Container

on:
  push:
    tags:
      - 'v*' # Trigger on tags starting with 'v' (e.g., v1.0.0)

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read # To checkout the repository
      packages: write # To push container image to GHCR

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract tag name
      shell: bash
      # Extracts the tag name (e.g., v1.0.0) from the Git ref
      run: echo "IMAGE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Set up QEMU
      # Useful for building multi-platform images, good practice
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      # Sets up Docker Buildx builder instance
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        # Uses the automatically generated GITHUB_TOKEN for authentication
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        # Specifies the build context is the root of the repository
        # IMPORTANT: Assumes Containerfile, nginx.conf, and frontend source are relative to repo root
        # If your frontend code is in a subdirectory (e.g., 'frontend/'), adjust context/file paths:
        context: ./frontend # Set context to the frontend directory
        file: ./frontend/Containerfile # Set path to Containerfile within frontend directory
        push: true # Push the image to the registry after building
        tags: ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }} # Tag format: ghcr.io/owner/repo:tag
        # Enable build cache for faster subsequent builds
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image Digest
      # Optional: Output the digest of the pushed image
      run: echo "Pushed image digest ${{ steps.docker_build.outputs.digest }}"
